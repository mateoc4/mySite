{"version":3,"sources":["components/Form/Form.js","components/Skeleton/ArgumentsSite.js","components/App/App.js","serviceWorker.js","index.js"],"names":["Form","react_default","a","createElement","onClick","this","props","x","value","val","onChange","hc","placeholder","maxLength","className","hl","React","Component","ArgumentsSite","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleClick","index","hangClick","name","setState","defineProperty","state","show1","show2","show4","show5","counter1","_this2","toggleVisible","style","display","proArg","map","item","key","e","target","nextElementSibling","innerText","firebase","ref","id","set","votes","toggleVisible2","consArg","console","log","App","proMyth","consMyth","formVisible","formVisible2","value2","ev","preventDefault","obj","push","handleClickk","handleChange","on","resp","data","toConsumableArray","concat","Fragment","ArgumentsSite_ArgumentsSite","components_Form_Form","Boolean","window","location","hostname","match","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","ReactDOM","render","components_App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.92857fe5.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Form.scss\";\n\nclass Form extends React.Component {\n\n    render() {\n        return (\n            <form onClick={this.props.x}>\n\n                    <input\n                        value={this.props.val}\n                        onChange={this.props.hc}\n                        placeholder={\"dodaj argument maxymalna ilosc znaków to 140 \"}\n                        maxLength=\"140\"\n                    />\n\n\n                    <button className=\"formBtn\" onClick={this.props.hl}>Wyślij</button>\n\n            </form>\n        );\n    }\n}\n\nexport default Form;","import React from \"react\";\nimport \"./ArgumentsSite.scss\";\n\nimport * as firebase from 'firebase'\n\n\n\n\nexport default class ArgumentsSite extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            show1: \"none\",\n            show2: \"none\",\n            show4: \"none\",\n            show5: \"none\",\n            counter1: 0,\n        };\n    }\n\n\n    handleClick = (index) => {\n\n    };\n\n    render() {\n        return (\n            <div className=\"container\">\n                <div className=\"above\">\n                    <h1>Czy obywatele powinni miec pełny dostęp do broni </h1>\n                </div>\n                <div className=\"box\">\n                    <div className=\"pros\">\n                        <div className=\"headerTexts\">\n                            <div className=\"adder\">\n                                <h1 onClick={() => this.hangClick(\"show1\")}>Argumenty Za</h1>\n\n                                <button onClick={() => this.props.toggleVisible()}>\n                                    Dodaj\n                                </button>\n                            </div>\n\n                            <ul className=\"list\" style={{ display: this.state.show1 }}>\n                                {this.props.proArg.map((item, index) => {\n                                    return (\n                                        <li key={index}>\n                                            {item.value}\n\n                                            <button\n                                                onClick={(e) => {\n                                                    e.target.nextElementSibling.innerText++;\n                                                    firebase.database().ref('/proArg/' + item.id).set({\n                                                        value: item.value,\n                                                        votes: item.votes + 1\n                                                    })\n                                                }\n                                                }>\n\n                                                +\n                                            </button>\n                                            <p className=\"licznik\">{item.votes}</p>\n\n                                        </li>\n                                    );\n                                })}\n                            </ul>\n                        </div>\n\n                        <div className=\"headerTexts\">\n                            <h1 onClick={() => this.hangClick(\"show2\")}>\n                                Obalone Argumenty za (Mity)\n                            </h1>\n                            <ul style={{ display: this.state.show2 }}>\n                                <li>svss</li>\n                                <li>svss</li>\n                            </ul>\n                        </div>\n                    </div>\n\n                    <div className=\"cons\">\n                        <div className=\"headerTexts\">\n                            <h1 onClick={() => this.hangClick(\"show4\")}>Argumenty Przeciw</h1>\n\n                            <button onClick={() => this.props.toggleVisible2()}>\n                                Dodaj\n                            </button>\n\n                            <ul className=\"list\" style={{ display: this.state.show4 }}>\n                                {this.props.consArg.map((item, index) => {\n                                    return (\n                                        <li key={index}>\n\n                                            {item.value}\n                                            <button\n                                                onClick={(e) => console.log('kupa')}>\n                                                +\n                                            </button>\n                                            <p className=\"licznik\">{item.votes}</p>\n                                        </li>\n                                    );\n                                })}\n                            </ul>\n                        </div>\n\n                        <div className=\"headerTexts\">\n                            <h1 onClick={() => this.hangClick(\"show5\")}>\n                                Obalone Argumenty przeciw (Mity)\n                            </h1>\n                            <ul style={{ display: this.state.show5 }}>\n                                <li>svss</li>\n                                <li>svss</li>\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    hangClick = name => {\n        this.setState({\n            [name]: this.state[name] === \"block\" ? \"none\" : \"block\"\n        });\n    };\n\n}\n//////////////\n\n\n/*\nimport React from \"react\";\n\nexport default class ArgumentsSite extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state= {\n            show1:\"none\",\n            show2:\"none\",\n            show3:\"none\",\n            show4:\"none\",\n            show5:\"none\",\n            show6:\"none\",\n        }\n    }\n    wycialem stad tam bebechy bo nie byly podtrzebne\\\n\n                                <h1>Argumenty Za</h1>\n                                <ul style={{display:this.state.show1}}>\n                                    <li>svss</li>\n                                    <li>svss</li>\n                                </ul>\n                            </div>\n\n                            <div onClick={this.handleClick2} style={headerTexts}>\n                                <h1>Obalone Argumenty za (Mity)</h1>\n                                <ul style={{display:this.state.show2}}>\n                                    <li>svss</li>\n                                    <li>svss</li>\n                                </ul>\n                            </div>\n\n                            <div onClick={this.handleClick3} style={headerTexts}>\n\n                                <h1>Argumenty Przeciw</h1>\n                                <ul style={{display:this.state.show3}}>\n                                    <li>svss</li>\n                                    <li>svss</li>\n                                </ul>\n                            </div>\n\n\n                        </div>\n                        <div style={{backgroundColor:\"pink\",width: \"47%\", height:\"600px\"}} className = \"cons\">\n                            <div onClick={this.handleClick4} style={headerTexts}>\n\n                                <h1>Argumenty Za</h1>\n                                <ul style={{display:this.state.show4}}>\n                                    <li>svss</li>\n                                    <li>svss</li>\n                                </ul>\n                            </div>\n\n                            <div onClick={this.handleClick5} style={headerTexts}>\n\n                                <h1>Obalone Argumenty za (Mity)</h1>\n                                <ul style={{display:this.state.show5}}>\n                                    <li>svss</li>\n                                    <li>svss</li>\n                                </ul>\n                            </div>\n\n                            <div onClick={this.handleClick6} style={headerTexts}>\n\n                                <h1>Argumenty Przeciw</h1>\n                                <ul style={{display:this.state.show6}}>\n                                    <li>svss</li>\n                                    <li>svss</li>\n                                </ul>\n\n\n    handleClick = () => {\n        this.setState({\n            show1: this.state.show1 ===\"block\" ? \"none\":\"block\" })\n    }\n    handleClick2 = () => {\n        this.setState({\n            show2: this.state.show2 ===\"block\" ? \"none\":\"block\" })\n    }\n    handleClick3 = () => {\n        this.setState({\n            show3: this.state.show3 ===\"block\" ? \"none\":\"block\" })\n    }\n\n    handleClick4 = () => {\n        this.setState({\n            show4: this.state.show4 ===\"block\" ? \"none\":\"block\" })\n    }\n\n    handleClick5 = () => {\n        this.setState({\n            show5: this.state.show5 ===\"block\" ? \"none\":\"block\" })\n    }\n    handleClick6 = () => {\n        this.setState({\n            show6: this.state.show6 ===\"block\" ? \"none\":\"block\" })\n    }\n\n}\n\n */","import React, { Component } from \"react\";\nimport \"./App.scss\";\nimport * as firebase from \"firebase\";\n\nimport Form from \"../Form/Form\";\nimport ArgumentsSite from \"../Skeleton/ArgumentsSite\";\n\nclass App extends Component {\n    //ES7 property initializer\n    state = {\n        proArg: [],\n        consArg: [],\n        proMyth: [],\n        consMyth: [],\n        formVisible: false,\n        formVisible2: false,\n        value: \"\",\n        value2: \"\"\n    };\n\n    componentDidMount() {\n        firebase\n            .database()\n            .ref(\"/proArg\")\n            .on(\"child_added\", resp => {\n                const data = resp.val();\n                data.id = resp.key\n                this.setState({\n                    proArg: [...this.state.proArg, data]\n                });\n            });\n\n        firebase\n            .database()\n            .ref(\"/consArg\")\n            .on(\"child_added\", resp => {\n                const data = resp.val();\n                this.setState({\n                    consArg: [...this.state.consArg, data]\n                });\n            });\n        firebase\n            .database()\n            .ref(\"/proMyth\")\n            .on(\"child_added\", resp => {\n                const data = resp.val();\n                this.setState({\n                    proMyth: [...this.state.proMyth, data]\n                });\n            });\n        firebase\n            .database()\n            .ref(\"/consMyth\")\n            .on(\"child_added\", resp => {\n                const data = resp.val();\n                this.setState({\n                    consMyth: [...this.state.consMyth, data]\n                });\n            });\n    }\n\n    handleClick = ev => {\n        ev.preventDefault();\n        const obj = {\n            value: this.state.value,\n            votes: 0\n        };\n        firebase\n            .database()\n            .ref(\"/proArg\")\n            .push(obj);\n        this.setState({\n            value: \"\"\n        });\n    };\n    handleClickk = ev => {\n        ev.preventDefault();\n        const obj = {\n            value: this.state.value\n        };\n        firebase\n            .database()\n            .ref(\"/consArg\")\n            .push(obj);\n        this.setState({\n            value2: \"\"\n        });\n    };\n    handleChange = e => {\n        this.setState({\n            value: e.target.value,\n            value2: e.target.value2\n        });\n    };\n\n    toggleVisible = () => {\n        this.setState({\n            formVisible: !this.state.formVisible\n        });\n    };\n    toggleVisible2 = () => {\n        this.setState({\n            formVisible2: !this.state.formVisible2\n        });\n    };\n\n\n\n    render() {\n        return (\n            <>\n                <ArgumentsSite\n                    proArg={this.state.proArg}\n                    consArg={this.state.consArg}\n                    proMyth={this.state.proMyth}\n                    consMyth={this.state.consMyth}\n                    toggleVisible={this.toggleVisible}\n                    toggleVisible2={this.toggleVisible2}\n                />\n\n                    <div className=\"argAdder\">\n                        {this.state.formVisible && (\n                        <div className=\"App\">\n                            <Form\n                                hl={this.handleClick}\n                                hc={this.handleChange}\n                                val={this.state.value}\n                            />\n                        </div>\n                        )}\n                        {this.state.formVisible2 && (\n                        <div className=\"App\">\n                            <Form\n                                hl={this.handleClickk}\n                                hc={this.handleChange}\n                                val={this.state.value2}\n                            />\n                        </div>\n                        )}\n                    </div>\n\n            </>\n        );\n    }\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\nimport * as firebase from 'firebase';\n\n\n\nconst config = {\n    apiKey: \"AIzaSyCyO5i3M3Rpu0pXCpGVHviyRS6yEY_xfOE\",\n    authDomain: \"dream-69693.firebaseapp.com\",\n    databaseURL: \"https://dream-69693.firebaseio.com\",\n    projectId: \"dream-69693\",\n    storageBucket: \"dream-69693.appspot.com\",\n    messagingSenderId: \"577227641216\"\n};\nfirebase.initializeApp(config);\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n/*\njak chcesz wbazce\n\ntrzymac tez ta liczbe\n\npushowac i odczytywac\ntrzymac w sumie caly obiekt item\nktory bedzie mial takie properties\njak\nobj ={ number, name }\n\ni tablica takich obiektow to bedzie twoja tablica\nna onClicku\n\ndodajesz + 1 do state np\ni wysylasz do bazy\n\n\n */"],"sourceRoot":""}